# ... previous steps unchanged ...

      - name: Second (runtime) Kodi start and readiness (log-based)
        run: |
          set -euxo pipefail
          export PULSE_SERVER=127.0.0.1
          docker run -d --name kodi-runtime \
            -p 8080:8080 \
            -p 8000:8000 \
            -p 5900:5900 \
            -p 9090:9090 \
            -p 9777:9777/udp \
            -e PUID=$(id -u) \
            -e PGID=$(id -g) \
            -e TZ=UTC \
            -e PULSE_SERVER=127.0.0.1 \
            -v "$(pwd)/kodi-config:/data" \
            fhriley/kodi-headless-novnc:${{ matrix.kodi-tag }}

          echo "Waiting (max 120s) for Kodi core readiness (JSONRPC initialized)..."
          start=$(date +%s)
          while true; do
            if docker exec kodi-runtime sh -c 'grep -q "JSONRPC Server: Successfully initialized" /data/.kodi/temp/kodi.log 2>/dev/null'; then
              echo "Kodi JSONRPC core initialized."
              break
            fi
            if (( $(date +%s) - start > 120 )); then
              echo "Timeout waiting for JSONRPC init line."
              docker exec kodi-runtime sh -c 'tail -n 200 /data/.kodi/temp/kodi.log || ls -l /data/.kodi/temp'
              exit 1
            fi
            sleep 2
          done

          # Optional: attempt HTTP webserver probe (non-fatal)
            if curl -sf -H 'Content-Type: application/json' \
                 --data '{"jsonrpc":"2.0","method":"JSONRPC.Ping","id":1}' \
                 http://127.0.0.1:8080/jsonrpc | grep -q '"pong"'; then
              echo "HTTP JSON-RPC (8080) reachable."
            else
              echo "WARNING: HTTP JSON-RPC on port 8080 not reachable; proceeding because core is ready."
              docker exec kodi-runtime sh -c 'grep -i webserver /data/.kodi/temp/kodi.log || echo "(no webserver lines in log)"' || true
            fi

          # Optional: check TCP (9090) JSON-RPC socket
          if docker exec kodi-runtime sh -c 'ss -ltn | grep -q ":9090 "'; then
            echo "TCP JSON-RPC (9090) appears to be listening."
          else
            echo "NOTE: Port 9090 not observed listening."
          fi

          sleep 5